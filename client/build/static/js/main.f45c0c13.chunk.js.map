{"version":3,"sources":["utils/setAuthToken.js","actions/authActions.js","actions/types.js","reducers/authReducers.js","reducers/errorReducers.js","reducers/index.js","store.js","components/layout/Navbar.js","components/layout/Landing.js","components/auth/Register.js","components/auth/Login.js","components/private-route/PrivateRoute.js","components/dashboard/Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","type","payload","logoutUser","dispatch","localStorage","removeItem","isEmpty","require","initialState","isAuthenticated","user","loading","initiaState","combineReducers","auth","state","arguments","length","undefined","action","Object","objectSpread","errors","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","Navbar","react_default","a","createElement","className","react_router_dom","to","style","fontFamily","Component","Landing","height","width","borderRadius","letterSpacing","Register","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChange","e","setState","defineProperty","target","id","value","onSubmit","preventDefault","newUser","name","email","password","password2","props","registerUser","history","nextProps","push","paddingLeft","noValidate","error","classnames","invalid","htmlFor","marginTop","connect","userData","post","then","res","catch","err","response","data","withRouter","Login","loginUser","paddingLEft","emailnotfound","passwordincorrect","jwt_decode","_ref","component","rest","objectWithoutProperties","react_router","assign","render","Dashboard","onLogoutClick","split","onClick","jwtToken","currentTime","Date","now","exp","location","href","App","es","layout_Navbar","exact","path","private_route_PrivateRoute","Boolean","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f45c0c13.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst setAuthToken = token => {\r\n    if (token) {\r\n        // Apply authorization token to every request if logged in\r\n        axios.defaults.headers.common['Authorization'] = token;\r\n    } else {\r\n        delete axios.defaults.headers.common[\"Authorization\"];\r\n    }\r\n};\r\n\r\nexport default setAuthToken;","import axios from \"axios\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nimport {\r\n    GET_ERRORS,\r\n    SET_CURRENT_USER,\r\n    USER_LOADING\r\n  } from \"./types\";\r\nimport { decode } from \"punycode\";\r\n  \r\n  // Register User\r\n  export const registerUser = (userData, history) => dispatch => {\r\n      axios\r\n        .post(\"/api/users/register\", userData)\r\n        .then(res => history.push(\"/login\")) // re-direct to login on successful register\r\n        .catch(err => \r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        );\r\n  };\r\n\r\n  // Login - get user token\r\n  export const loginUser = userData => dispatch => {\r\n      axios\r\n        .post(\"/api/users/login\", userData)\r\n        .then(res => {\r\n            // Save to localStorage\r\n\r\n            // Set token to localStorage\r\n            const { token } = res.data;\r\n            // Set token to Auth header\r\n            setAuthToken(token);\r\n            // Decode token to get user data\r\n            const decoded = jwt_decode(token)\r\n            // Set current user\r\n            dispatch(setCurrentUser(decoded));\r\n        })\r\n        .catch(err => \r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        );\r\n  };\r\n\r\n  // Set logged in user\r\n  export const setCurrentUser = decoded => {\r\n      return {\r\n          type: SET_CURRENT_USER,\r\n          payload: decoded\r\n      };\r\n  };\r\n\r\n  // User loading\r\n  export const setUserLoading = () => {\r\n      return {\r\n          type: USER_LOADING\r\n      };\r\n  };\r\n\r\n  // Log user out\r\n  export const logoutUser = () => dispatch => {\r\n    // Remove token from local storage\r\n    localStorage.removeItem(\"jwtToken\");\r\n    // Remove auth header for future requests\r\n    setAuthToken(false);\r\n    // Set current user to empty object {} which will set isAuthenticated to false\r\n    dispatch(setCurrentUser({}));\r\n  };","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const USER_LOADING = \"USER_LOADING\";\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";","import {\r\n    SET_CURRENT_USER,\r\n    USER_LOADING\r\n} from \"../actions/types\";\r\n\r\nconst isEmpty = require(\"is-empty\");\r\n\r\nconst initialState = {\r\n    isAuthenticated: false,\r\n    user: {},\r\n    loading: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_CURRENT_USER:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: !isEmpty(action.payload),\r\n                user: action.payload\r\n            };\r\n        case USER_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initiaState = {};\r\n\r\nexport default function(state = initiaState, action) {\r\n    switch (action.type) {\r\n        case GET_ERRORS:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./authReducers\";\r\nimport errorReducer from \"./errorReducers\";\r\n\r\nexport default combineReducers({\r\n    auth: authReducer,\r\n    errors: errorReducer\r\n});","import { createStore, applyMiddleware, compose } from \"redux\";\r\n\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n\r\nrootReducer,\r\n\r\ninitialState,\r\n\r\ncomposeEnhancer(applyMiddleware(thunk))\r\n\r\n);\r\n\r\nexport default store;","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Navbar extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"navbar-fixed\">\r\n                <nav className=\"z-depth-0\">\r\n                    <div className=\"nav-wrapper white\">\r\n                        <Link\r\n                            to=\"/\"\r\n                            style={{\r\n                                fontFamily: \"monospace\"\r\n                            }}\r\n                            className=\"col s5 brand-logo center black-text\"\r\n                        >\r\n                            <i className=\"material-icons\">code</i>\r\n                            MERN\r\n                        </Link>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Landing extends Component {\r\n    render() {\r\n        return (\r\n            <div style={{ height: \"75vh\" }} className=\"container valign-wrapper\">\r\n                <div className=\"row\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col s12 center-align\">\r\n                            <h4>\r\n                                <b>Build</b> a login/auth app with the { \" \" }\r\n                                <span style={{ fontFamily: \"monospace\" }}>MERN</span>stack from scratch\r\n                            </h4>\r\n                            <p className=\"flow-text grey-text text-darken-1\">\r\n                                Create a (minimal) full-stack app with user authentication via passport and JWTs\r\n                            </p>\r\n                            <br />\r\n                            <div className=\"col s6\">\r\n                                <Link\r\n                                    to=\"/register\"\r\n                                    style={{\r\n                                        width: \"140px\",\r\n                                        borderRadius: \"3px\",\r\n                                        letterSpacing: \"1.5px\"\r\n                                    }}\r\n                                    className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\r\n                                >\r\n                                    Register\r\n                                </Link>\r\n                            </div>\r\n                            <div className=\"col s6\">\r\n                                <Link\r\n                                    to=\"/login\"\r\n                                    style={{\r\n                                        width: \"140px\",\r\n                                        borderRadius: \"3px\",\r\n                                        letterSpacing: \"1.5px\"\r\n                                    }}\r\n                                    className=\"btn btn-large btn-flat waves-effect white black-text\"\r\n                                >\r\n                                    Log In\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Landing;","import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { registerUser } from \"../../actions/authActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Register extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            name: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            password2: \"\",\r\n            errors: {}\r\n        };\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.errors) {\r\n          this.setState({\r\n            errors: nextProps.errors\r\n          });\r\n        }\r\n      }\r\n\r\n      componentDidMount() {\r\n        // If logged in and user navigates to Register page, should redirect them to dashboard\r\n        if (this.props.auth.isAuthenticated) {\r\n          this.props.history.push(\"/dashboard\");\r\n        }\r\n      }\r\n\r\n    onChange = e => {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    };\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const newUser = {\r\n            name: this.state.name,\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            password2: this.state.password2\r\n        };\r\n        \r\n\r\n        this.props.registerUser(newUser, this.props.history);\r\n    };\r\n\r\n    render() {\r\n        const { errors } = this.state;\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s8 offset-s2\">\r\n                        <Link to=\"/\" className=\"btn-flat waves-effect\">\r\n                            <i className=\"material-icons left\">keyboard_backspace</i> Back to home\r\n                        </Link>\r\n                        <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n                            <h4>\r\n                                <b>Register</b> below\r\n                            </h4>\r\n                            <p className=\"grey-text text-darken-1\">\r\n                                Already have an account? <Link to=\"/login\">Log in</Link>\r\n                            </p>\r\n                        </div>\r\n                        <form noValidate onSubmit={this.onSubmit}>\r\n                            <div className=\"input-field col s12\">\r\n                                <input\r\n                                    onChange={this.onChange}\r\n                                    value={this.state.name}\r\n                                    error={errors.name}\r\n                                    id=\"name\"\r\n                                    type=\"text\"\r\n                                    className={classnames(\"\", {\r\n                                        invalid: errors.name\r\n                                      })}\r\n                                />\r\n                                <label htmlFor=\"name\">Name</label>\r\n                                <span className=\"red-text\">{errors.name}</span>\r\n                            </div>\r\n                            <div className=\"input-field col s12\">\r\n                                <input\r\n                                    onChange={this.onChange}\r\n                                    value={this.state.email}\r\n                                    error={errors.email}\r\n                                    id=\"email\"\r\n                                    type=\"email\"\r\n                                    className={classnames(\"\", {\r\n                                        invalid: errors.email\r\n                                      })}\r\n                                />\r\n                                <label htmlFor=\"email\">Email</label>\r\n                                <span className=\"red-text\">{errors.email}</span>\r\n                            </div>\r\n                            <div className=\"input-field col s12\">\r\n                                 <input \r\n                                    onChange={this.onChange}\r\n                                    value={this.state.password}\r\n                                    error={errors.password}\r\n                                    id=\"password\"\r\n                                    type=\"password\"\r\n                                    className={classnames(\"\", {\r\n                                        invalid: errors.password\r\n                                      })}\r\n                                 />\r\n                                 <label htmlFor=\"password\">Password</label>\r\n                                 <span className=\"red-text\">{errors.password}</span>\r\n                            </div>\r\n                            <div className=\"input-field col s12\">\r\n                                 <input\r\n                                    onChange={this.onChange}\r\n                                    value={this.state.password2}\r\n                                    error={errors.password2}\r\n                                    id=\"password2\"\r\n                                    type=\"password\"\r\n                                    className={classnames(\"\", {\r\n                                        invalid: errors.password2\r\n                                      })}\r\n                                 />\r\n                                 <label htmlFor=\"password2\">Confirm Password</label>\r\n                                 <span className=\"red-text\">{errors.password2}</span>\r\n                            </div>\r\n                            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n                                <button\r\n                                style={{\r\n                                    width: \"150px\",\r\n                                    borderRadius: \"3px\",\r\n                                    letterSpacing: \"1.5px\",\r\n                                    marginTop: \"1rem\"\r\n                                }}\r\n                                type=\"submit\"\r\n                                className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\r\n                                >\r\n                                Sign up\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nRegister.propTypes = {\r\n    registerUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n  };\r\n\r\n  const mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    errors: state.errors\r\n  });\r\n\r\n  export default connect(\r\n    mapStateToProps,\r\n    { registerUser }\r\n  )(withRouter(Register));","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser } from \"../../actions/authActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Login extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            email: \"\",\r\n            password: \"\",\r\n            errors: {}\r\n        };\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.auth.isAuthenticated) {\r\n          this.props.history.push(\"/dashboard\"); // push user to dashboard when they login\r\n        }\r\n    if (nextProps.errors) {\r\n          this.setState({\r\n            errors: nextProps.errors\r\n          });\r\n        }\r\n      }\r\n\r\n      componentDidMount() {\r\n        // If logged in and user navigates to Login page, should redirect them to dashboard\r\n        if (this.props.auth.isAuthenticated) {\r\n          this.props.history.push(\"/dashboard\");\r\n        }\r\n      }\r\n\r\n    onChange = e => {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    };\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const userData = {\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        };\r\n\r\n        \r\n\r\n        this.props.loginUser(userData); // since we handle the redirect within our component, we don't need to pass in this.props.history as a parameter\r\n  };\r\n \r\n    render() {\r\n        const { errors } = this.state;\r\n        \r\n        return (\r\n            <div className=\"container\">\r\n                <div style={{ marginTop: \"4rem\" }} className=\"row\">\r\n                    <div className=\"col s8 offset-s2\">\r\n                        <Link to=\"/\" className=\"btn-flat waves-effect\">\r\n                            <i className=\"material-icons\">keyboard_backspace</i> Back to home\r\n                        </Link>\r\n                        <div className=\"col s12\" style={{ paddingLEft: \"11.250px\"}} >\r\n                            <h4>\r\n                                <b>Login</b> below\r\n                            </h4>\r\n                            <p className=\"grey-text text-darken-1\">\r\n                                Don't have an account ? <Link to=\"/register\">Register</Link>\r\n                            </p>\r\n                        </div>\r\n                        <form noValidate onSubmit={this.onSubmit}>\r\n                            <div className=\"input-field col s12\">\r\n                                <input\r\n                                    onChange={this.onChange}\r\n                                    value={this.state.email}\r\n                                    error={errors.email}\r\n                                    id=\"email\"\r\n                                    type=\"email\"\r\n                                    className={classnames(\"\", {\r\n                                        invalid: errors.email || errors.emailnotfound\r\n                                      })}\r\n                                />\r\n                                <label htmlFor=\"email\">Email</label>\r\n                                <span className=\"red-text\">\r\n                                    {errors.email}\r\n                                    {errors.emailnotfound}\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"input-field col s12\">\r\n                                <input\r\n                                    onChange={this.onChange}\r\n                                    value={this.state.password}\r\n                                    error={errors.password}\r\n                                    id=\"password\"\r\n                                    type=\"password\"\r\n                                    className={classnames(\"\", {\r\n                                        invalid: errors.password || errors.passwordincorrect\r\n                                      })}\r\n                                />\r\n                                <label htmlFor=\"password\">Password</label>\r\n                                <span className=\"red-text\">\r\n                                    {errors.password}\r\n                                    {errors.passwordincorrect}\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"col s12\" style={{ paddingLeft: \"11.250\" }}>\r\n                                <button\r\n                                    style={{\r\n                                        width: \"150px\",\r\n                                        borderRadius: \"3px\",\r\n                                        letterSpacing: \"1.5px\",\r\n                                        marginTop: \"1rem\"\r\n                                    }}\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\r\n                                >\r\n                                    Login\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nLogin.propTypes = {\r\n    loginUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n  };\r\n\r\n  const mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    errors: state.errors\r\n  });\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    { loginUser }\r\n  )(Login);","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={props =>\r\n            auth.isAuthenticated === true ? (\r\n                <Component {...props} />\r\n            ) : (\r\n                <Redirect to=\"/login\" />\r\n            )\r\n        }\r\n    />\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n    auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logoutUser } from \"../../actions/authActions\";\r\n\r\nclass Dashboard extends Component {\r\n    onLogoutClick = e => {\r\n        e.preventDefault();\r\n        this.props.logoutUser();\r\n    };\r\n\r\n    render() {\r\n        const { user } = this.props.auth;\r\n\r\n        return (\r\n            <div style={{ height: \"75vh\" }} className=\"container valign-wrapper\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 center-align\">\r\n                        <h4>\r\n                            <b>Hey there,</b> {user.name.split(\" \")[0]}\r\n                            <p className=\"flow-text grey-text text-darken-1\">\r\n                                You are logged into a full-stack{\" \"}\r\n                                <span style={{ fontFamily: \"monospace\" }}>MERN</span> app 👏\r\n                            </p>\r\n                        </h4>\r\n                        <button\r\n                            style={{\r\n                                width: \"150px\",\r\n                                borderRadius: \"3px\",\r\n                                letterSpacing: \"1.5px\",\r\n                                marginTop: \"1rem\"\r\n                            }}\r\n                            onClick={this.onLogoutClick}\r\n                            className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\r\n                        >\r\n                            Logout\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDashboard.propTypes = {\r\n    logoutUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { logoutUser }\r\n) (Dashboard);","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport Navbar from \"./components/layout/Navbar\";\nimport Landing from \"./components/layout/Landing\";\nimport Register from \"./components/auth/Register\";\nimport Login from \"./components/auth/Login\";\nimport PrivateRoute from \"./components/private-route/PrivateRoute\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\n\n// Check for token to keep user logged in\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  const token = localStorage.jwtToken;\n  setAuthToken(token);\n  // Decode token and get user info and exp\n  const decoded = jwt_decode(token);\n  // Set user and isAuthenticated\n  store.dispatch(setCurrentUser(decoded));\n// Check for expired token\n  const currentTime = Date.now() / 1000; // to get in milliseconds\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser());\n    // Redirect to login\n    window.location.href = \"./login\";\n  }\n}\n\nfunction App() {\n  return (\n    <Provider store={store}>\n    <Router>\n      <div className=\"App\">\n        <Navbar />\n        <Route exact path=\"/\" component={Landing} />\n        <Route exact path=\"/register\" component={Register} />\n        <Route exact path=\"/login\" component={Login} />\n\n        <Switch>\n          <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n        </Switch>\n\n      </div>\n    </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}